---
name: Input Validation
version: v1
author: system
description: Validate and clean user input for wine recommendations.
input_schema: z.object({ userInput: z.string() })
output_schema: z.object({ isValid: z.boolean(), cleanedInput: z.object({ ingredients: z.array(z.string()).optional(), budget: z.number().optional(), occasion: z.string().optional() }).optional(), extractedData: z.object({ standardizedIngredients: z.record(z.string()).optional(), dietaryRestrictions: z.array(z.string()).optional(), preferences: z.record(z.any()).optional() }).optional(), errors: z.array(z.string()).optional() })
---
Analyze the following user input for wine recommendation.
Identify and extract any relevant information such as ingredients, budget, or occasion.
If the input is valid and contains actionable information, set `isValid` to true.
Populate `cleanedInput` as a JSON object with `ingredients` (array of strings), `budget` (number), and `occasion` (string) if present.
Populate `extractedData` as a JSON object with `standardizedIngredients` (record of strings), `dietaryRestrictions` (array of strings), and `preferences` (record of any) if present.
If the input is unclear or invalid, set `isValid` to false and provide `errors` as an array of strings.

User Input: {{userInput}}